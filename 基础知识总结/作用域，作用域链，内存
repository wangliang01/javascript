1.作用域

作用域是js存储变量的一套规则

作用域是函数对象上的一个内部属性，外部不可以访问，其属性值，是所有变量，函数名，全局对象及其属性的集合，这个集合又被叫做作用域链

作用域分为全局作用域和函数作用域



js执行代码时，解释器是如何运作的？

1）首先，js解释器会创建一个全局作用域，并创建一个作用域链，并将全局对象推入作用链顶端

全局对象上保存的是在全局作用域下声明的变量，函数，全局对象，以及隐式创建的全局变量(全局对象上的属性)

2）接下来，函数在执行时，js解释器会创建一个函数执行环境的内部对象，每个执行环境都有自己的作用域，用于标识符解析，当执行环境被创建时，它的作用域链初

始化为当前运行函数的[[scope]]所包含的对象。这些值按照它们出现的顺序被复制到执行环境的作用域链中，它们组成 

了一个新的对象，叫活动对象，该对象中包含了函数中所有的命名参数，局部变量，内部函数，参数集合(arguments), 以及this,

然后对象被推入到作用域的顶端，当运行期上下文被销毁，活动对象也随之销毁。

3）接下来，在活动对象上创建一个arguments的类数组对象，存放的是函数的参数列表

arguments有以下属性：

length: 实参的个数

callee: 函数的引用

参数的索引值

4）接下来就是实参到形参的值传递，也就是对形参的赋值

5）接下来就是对变量声明，函数声明的提前，如果变量与形参重名，则变量声明则被忽略，如果函数声明与形参重名，则形参被覆盖

6）指定this



2.作用域链

作用域链是由一个个作用域连接而成的，最末端是全局作用域

变量的查找是沿着作用域逐一向上查找，直到全局作用域

沿长作用域链： with语句，eval()


3.内存

js中自带了垃圾回收机制，所以对于内存的管理也就变得很简单了，对于不再使用的变量或者函数，将其手动置为null,垃圾回收机制就会自动清理不需要的内存空间