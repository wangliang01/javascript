1.作用域

作用域是js存储变量的一套规则

js中只有函数作用域

js执行代码时，解释器是如何运作的？

1）首先，js解释器会创建一个全局作用域，并创建一个作用域链，并将全局活动对象推入作用链

这个全局作用域也叫全局活动对象

2）接下来，将变量声明，函数声明提前，并将变量，函数保存在全局活动对象上

在执行函数代码时，js解释器会创建一个函数作用域，并将当前活动对象推入作用域的顶端

3）接下来，在活动对象上创建一个arguments的类数组对象，存放的是函数的参数列表

arguments有以下属性：

length: 实参的个数

callee: 函数的引用

参数的索引值

4）接下来就是实参到形参的值传递，也就是对形参的赋值

5）接下来就是对变量声明，函数声明的提前，如果变量与形参重名，则变量声明则被忽略，如果函数声明与形参重名，则形参被覆盖

6）指定this



2.作用域链

作用域链是由一个个作用域连接而成的，最末端是全局作用域

变量的查找是沿着作用域逐一向上查找，直到全局作用域

沿长作用域链： with语句，eval()


3.内存

js中自带了垃圾回收机制，所以对于内存的管理也就变得很简单了，对于不再使用的变量或者函数，将其手动置为null,垃圾回收机制就会自动清理不需要的内存空间